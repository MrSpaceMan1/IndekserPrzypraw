// <auto-generated />
using System;
using IndekserPrzypraw.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IndekserPrzypraw.Migrations
{
    [DbContext(typeof(SpicesContext))]
    [Migration("20240301141537_DrawerConstrains")]
    partial class DrawerConstrains
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IndekserPrzypraw.Domain.Spice", b =>
                {
                    b.Property<int>("SpiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SpiceId"));

                    b.Property<int>("DrawerId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("ExpirationDate")
                        .HasColumnType("date");

                    b.Property<long>("Grams")
                        .HasColumnType("bigint");

                    b.Property<int>("SpiceGroupId")
                        .HasColumnType("integer");

                    b.HasKey("SpiceId");

                    b.HasIndex("DrawerId");

                    b.HasIndex("SpiceGroupId");

                    b.ToTable("Spices");
                });

            modelBuilder.Entity("IndekserPrzypraw.Domain.SpiceGroup", b =>
                {
                    b.Property<int>("SpiceGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SpiceGroupId"));

                    b.Property<long?>("MinimumCount")
                        .HasColumnType("bigint");

                    b.Property<long?>("MinimumGrams")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SpiceGroupId");

                    b.ToTable("SpiceGroups");
                });

            modelBuilder.Entity("IndekserPrzypraw.Models.Drawer", b =>
                {
                    b.Property<int>("DrawerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DrawerId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.HasKey("DrawerId");

                    b.ToTable("Drawers");
                });

            modelBuilder.Entity("IndekserPrzypraw.Domain.Spice", b =>
                {
                    b.HasOne("IndekserPrzypraw.Models.Drawer", "Drawer")
                        .WithMany("Spices")
                        .HasForeignKey("DrawerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndekserPrzypraw.Domain.SpiceGroup", "SpiceGroup")
                        .WithMany()
                        .HasForeignKey("SpiceGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drawer");

                    b.Navigation("SpiceGroup");
                });

            modelBuilder.Entity("IndekserPrzypraw.Models.Drawer", b =>
                {
                    b.Navigation("Spices");
                });
#pragma warning restore 612, 618
        }
    }
}
